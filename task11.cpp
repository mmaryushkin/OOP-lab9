#include <iostream>

using namespace std;

/* 
    * 11. Создайте класс, который позволит вам использовать 10 отдельных массивов из упражнения 
    * 10 как один одномерный массив, допуская применение операций массива. То есть мы можем 
    * получить доступ к элементам массива, записав в функции main() выражение типа a[j], 
    * а методы класса могут получить доступ к полям класса, используя двухшаговый подход. 
    * Перегрузим операцию [ ], чтобы получить нужный нам результат. Заполним массив данными и 
    * выведем их. Хотя для интерфейса класса использованы операции индексации массива, вам 
    * следует использовать указатели внутри методов класса.
*/

const int NUMARRAYS = 10;
const int MAXSIZE = 10;


class PointArray {

private:
    int* ap[NUMARRAYS];  // массив указателей

public:

    PointArray() {
        /* Конструктор без аргументов добавляет массивы в массив указателей */

        for (int i = 0; i < NUMARRAYS; i++) {
            ap[i] = new int[MAXSIZE];
        }
    }

    int& operator[](int index) {
        /* 
            Перегруженный оператор принимает индекс (0-99) и обращается к соответствующему значению
            в соответствующем массиве и возвращает адрес этого значения.
        */

        int j = index / MAXSIZE;  // индекс массива в массиве указателей
        int k = index % MAXSIZE;  // индекс элемента в массиве
        return ap[j][k];
    }
};


int main() {
    PointArray ap_arr;
    // заполняем массив значениями от 0 до 99
    for (int i = 0; i < 100; i++)
        ap_arr[i] = i;
    // вывод элементов массива на экран
    for (int i = 0; i < 100; i++)
        cout << ap_arr[i] << " ";

    cout << endl;
    return 0;
}
